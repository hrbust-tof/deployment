<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>debug</level>
        </filter>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %X{Logger-Id} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </layout>
    </appender>
    <appender name="fileLogNormal" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--输出路径-->
            <fileNamePattern>../logs-%d/deployment.log</fileNamePattern>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %X{Logger-Id} [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <appender name="fileLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--输出路径-->
            <fileNamePattern>../logs/leads.log.%d</fileNamePattern>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %X{Logger-Id} [%thread] %-5level %logger{36} - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--输出路径-->
            <fileNamePattern>../logs/leads.error.%d</fileNamePattern>
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %X{Logger-Id} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>
    <logger name="org.springframework.web" level="DEBUG"/>
    <!-- mybatis 日志打印如果在 ssm 中，可能就需要下边的7行了。-->
    <!--<logger name="com.ibatis" level="DEBUG" />-->
    <!--<logger name="com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />-->
    <!--<logger name="com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />-->
    <!--<logger name="com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />-->
    <!--<logger name="java.sql.Connection" level="DEBUG" />-->
    <!--<logger name="java.sql.Statement" level="DEBUG" />-->
    <!--<logger name="java.sql.PreparedStatement" level="DEBUG" />-->

    <!-- 以下这一句至关重要如果没有，就无法输出 sql 语句 -->
    <!--注意：在 spring boot 中，想在控制台打印 mybatis 的 sql 语句，只需要配置下边这一句就好了。-->
    <!--如果想要记录更详细的 SQL 日志，只需要把下面的日志级别改成 TRACE 就可以了-->
    <!--即将 mapper 接口打入 logger 就行。-->
    <root level="${log.level}">
    <appender-ref ref="consoleLog"/>
    <appender-ref ref="fileLog"/>
    <appender-ref ref="fileErrorLog"/>
    </root>

    <!--<springProfile name="local">-->
        <!--<logger name="com.baijia.haoke" level="INFO"></logger>-->
        <!--<root level="INFO">-->
            <!--<appender-ref ref="consoleLog"/>-->
            <!--<appender-ref ref="fileLog"/>-->
            <!--<appender-ref ref="fileErrorLog"/>-->
        <!--</root>-->
    <!--</springProfile>-->

    <!--<springProfile name="dev">-->
        <!--<logger name="com.baijia.haoke" level="DEBUG"></logger>-->
        <!--<root level="DEBUG">-->
            <!--<appender-ref ref="fileLog"/>-->
            <!--<appender-ref ref="fileLogNormal"/>-->
            <!--<appender-ref ref="fileErrorLog"/>-->
        <!--</root>-->
    <!--</springProfile>-->

    <!--<springProfile name="test">-->
        <!--<logger name="com.baijia.haoke" level="DEBUG"></logger>-->
        <!--<root level="DEBUG">-->
            <!--<appender-ref ref="fileLog"/>-->
            <!--<appender-ref ref="fileErrorLog"/>-->
        <!--</root>-->
    <!--</springProfile>-->

    <!--<springProfile name="rd">-->
        <!--<logger name="com.baijia.haoke" level="DEBUG"></logger>-->
        <!--<root level="DEBUG">-->
            <!--<appender-ref ref="fileLog"/>-->
            <!--<appender-ref ref="fileErrStringUtils.isNotEmpty(UHC.getLoggerId()) ? UHC.getLoggerId() : UUID.randomUUID().toString()orLog"/>-->
        <!--</root>-->
    <!--</springProfile>-->

    <!--<springProfile name="qa">-->
        <!--<logger name="com.baijia.haoke" level="DEBUG"></logger>-->
        <!--<root level="DEBUG">-->
            <!--<appender-ref ref="fileLog"/>-->
            <!--<appender-ref ref="fileErrorLog"/>-->
        <!--</root>-->
    <!--</springProfile>-->
    <!--<springProfile name="beta">-->
        <!--<logger name="com.baijia.haoke" level="INFO"></logger>-->
        <!--<root level="INFO">-->
            <!--<appender-ref ref="fileLog"/>-->
            <!--<appender-ref ref="fileErrorLog"/>-->
        <!--</root>-->
    <!--</springProfile>-->
    <!--<springProfile name="prod">-->
        <!--<logger name="com.baijia.haoke" level="INFO"></logger>-->
        <!--<root level="INFO">-->
            <!--<appender-ref ref="fileLog"/>-->
            <!--<appender-ref ref="fileErrorLog"/>-->
        <!--</root>-->
    <!--</springProfile>-->

    <!--<root level="DEBUG">-->
        <!--<appender-ref ref="consoleLog"/>-->
        <!--<appender-ref ref="fileLog"/>-->
        <!--<appender-ref ref="fileErrorLog"/>-->
    <!--</root>-->
</configuration>